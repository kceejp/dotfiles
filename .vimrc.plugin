""""""""""""""""""""
" vundle.vim
""""""""""""""""""""
set nocompatible
filetype off

set rtp+=~/.vim/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

Bundle 'Shougo/neocomplcache'
Bundle 'Shougo/neosnippet'
Bundle 'Shougo/unite.vim'
Bundle 'Shougo/vimshell'
Bundle 'Shougo/vimproc'
Bundle 'Shougo/vimfiler'
Bundle 'ujihisa/unite-colorscheme'
" Bundle 'ujihisa/tabpagecolorscheme'
Bundle 'pasela/unite-webcolorname'
Bundle 'thinca/vim-unite-history'
Bundle 'h1mesuke/unite-outline'
Bundle 't9md/vim-unite-ack'

" Git
Bundle 'tpope/vim-fugitive'
Bundle 'int3/vim-extradite'
Bundle 'gregsexton/gitv'

" Subversion
Bundle 'vim-scripts/svn-diff.vim'
"shows diff when commiting changes
Bundle 'laurentb/vim-svndiff'
" Bundle 'vcscommand.vim'
" Bundle 'svndiff'
" Bundle 'svndiff.vim'
" Bundle 'svn-diff.vim'

" Twitter
Bundle 'basyura/TweetVim'
Bundle 'basyura/twibill.vim'
Bundle 'basyura/bitly.vim'
Bundle 'tyru/open-browser.vim'
Bundle 'mattn/webapi-vim'

Bundle 'yanktmp.vim'
Bundle 'YankRing.vim'
Bundle 'sjl/gundo.vim'
Bundle 'mbadran/headlights'

" template
" Bundle 'qtmplsel.vim'

Bundle 'Smooth-Scroll'
" Bundle 'simplefold'
" Bundle 'smartchr'
Bundle 'tpope/vim-surround'
" Bundle 'mattn/zencoding-vim.git'
Bundle 'vim-scripts/AutoClose--Alves'

" improved perl syntax highlighting
Bundle 'perl-mauke.vim'

" Bundle 'yoppi/perl5lib'
Bundle 'errormarker.vim'
" Bundle 'ywatase/flymake-perl.vim'
" Bundle 'kana/vim-flymake'

" Colorscheme
Bundle 'vim-scripts/Color-Sampler-Pack'
Bundle 'desert256.vim'
Bundle 'ciaranm/inkpot'
Bundle 'newspaper.vim'
Bundle 'therubymug/vim-pyte'
Bundle 'altercation/vim-colors-solarized'
Bundle 'tomasr/molokai'
Bundle 'wombat256.vim'

" Objective-C
Bundle 'msanders/cocoa.vim'

Bundle 'Lokaltog/vim-easymotion'
Bundle 'vim-scripts/matchit.zip'
" Bundle 'vim-scripts/ShowMarks'
Bundle 'vim-scripts/SearchComplete'
Bundle 'Lokaltog/vim-powerline'
Bundle 'godlygeek/tabular'

Bundle 'nathanaelkane/vim-indent-guides.git'
Bundle 'scrooloose/syntastic'
Bundle 'bigfish/vim-js-beautify'

" JavaScript
Bundle 'teramako/jscomplete-vim'
Bundle 'JavaScript-syntax'
Bundle 'jQuery'
Bundle 'kchmck/vim-coffee-script'

" nginx
Bundle 'nginx.vim'

" markdown
Bundle 'tpope/vim-markdown'

" python
Bundle 'yuroyoro/vim-python'

filetype plugin indent on

""""""""""""""""""""
" errormarker.vim
" http://subtech.g.hatena.ne.jp/secondlife/200807
""""""""""""""""""""
" set makeprg=$HOME/.vim/bin/vimparse.pl\ -c\ %\ $*
" set errorformat=%f:%l:%m
" set shellpipe=2>&1\ >
" 
" if !exists("g:perl_flyquickfixmake")
"   let g:perl_flyquickfixmake = 1
"   autocmd BufWritePost *.pm,*.pl,*.t silent make %
" endif

""""""""""""""""""""
" neocomplcache
""""""""""""""""""""
let g:neocomplcache_enable_at_startup = 1 " 起動時に有効化
" 1番目の候補を自動選択
let g:neocomplcache_enable_auto_select = 0
let g:neocomplcache_temporary_dir      = $HOME . '/.vim/tmp/.neocon'
let g:neocomplcache_snippets_dir       = '~/.vim/snippets'
" imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"

""""""""""""""""""""
" vcscommand.vim
""""""""""""""""""""
map <leader>di :VCSDiff<CR>

""""""""""""""""""""
" svndiff.vim
""""""""""""""""""""
noremap <F3> :call Svndiff("next")<CR>

""""""""""""""""""""
" yanktmp.vim : enables vim to yank and paste through the multi processes
" http://www.vim.org/scripts/script.php?script_id=1598
""""""""""""""""""""
map <silent> sy :call YanktmpYank()<CR>
map <silent> sp :call YanktmpPaste_p()<CR>
map <silent> sP :call YanktmpPaste_P()<CR>

""""""""""""""""""""
" unite.vim
" http://github.com/Shougo/unite.vim/blob/master/doc/unite.jax
""""""""""""""""""""
let g:unite_data_directory                 = $HOME . '/.vim/tmp/.unite' " absolute path!
let g:unite_source_file_rec_ignore_pattern = '(.git|.svn)'
let g:unite_source_file_mru_time_format    = ''
let g:unite_source_file_mru_limit          = 1000
let g:unite_source_history_yank_enable     = 1 "history/yankの有効化

" The prefix key.
nnoremap [unite] <Nop>
nmap f [unite]

nnoremap <silent> [unite]f  :<C-u>Unite tab file_rec/async<CR>
nnoremap <silent> [unite]r  :<C-u>Unite tab bookmark file_mru<CR>
nnoremap <silent> [unite]t  :<C-u>Unite tab<CR>
nnoremap <silent> [unite]c  :<C-u>Unite colorscheme -auto-preview<CR>
nnoremap <silent> [unite]cc :<C-u>Unite webcolorname<CR>
nnoremap <silent> [unite]tw :<C-u>Unite tweetvim<CR>
nnoremap <silent> [unite]o  :<C-u>Unite outline<CR>
nnoremap <silent> [unite]y  :<C-u>Unite history/yank<CR>
nnoremap <silent> [unite]h  :<C-u>Unite history/command<CR>
nnoremap <silent> [unite]s  :<C-u>Unite history/search<CR>
nnoremap <silent> [unite]a  :<C-u>Unite ack<CR>

autocmd FileType unite call s:unite_my_settings()

function! s:unite_my_settings()"{{{
  " Overwrite settings.

  call unite#custom_default_action('file', 'tabopen')

  nmap <buffer> a          <Plug>(unite_append_end)
  imap <buffer> jj         <Plug>(unite_insert_leave)

  imap <buffer> <Tab>      <Plug>(unite_do_default_action)
  imap <buffer> <S-Tab>    <Plug>(unite_insert_leave)<Plug>(unite_loop_cursor_up)

  nmap <buffer> <Tab>      <Plug>(unite_loop_cursor_down)
  nmap <buffer> <S-Tab>    <Plug>(unite_loop_cursor_up)

  nmap <buffer> <C-w>      <Plug>(unite_delete_backward_path)

  imap <buffer> <C-c>      <Plug>(unite_exit)
  nmap <buffer> <C-c>      <Plug>(unite_exit)
  imap <buffer> <C-c><C-c> <Plug>(unite_exit)
  nmap <buffer> <C-c><C-c> <Plug>(unite_exit)

  imap <buffer> <C-w>      <Plug>(unite_delete_backward_path)

  " Start insert.
  let g:unite_enable_start_insert             = 1
  let g:unite_update_time                     = 100
  let g:unite_source_file_rec_max_depth       = 5
  let g:unite_source_file_mru_filename_format = ''
  let g:unite_enable_smart_case               = 1
  let g:unite_enable_split_vertically         = 0

endfunction"}}}

""""""""""""""""""""
" qtmplsel.vim
""""""""""""""""""""
let g:qts_templatedir = "~/.vim/template"

""""""""""""""""""""
" yankring.vim
""""""""""""""""""""
let g:yankring_history_file = ".vim/tmp/yankring_history" " do not specify $HOME since it'll cause error

""""""""""""""""""""
" vimfiler
""""""""""""""""""""
map <leader>vf :VimFilerTab<CR>

let g:vimfiler_as_default_explorer = 1
let g:vimfiler_edit_action         = 'tabopen'

call vimfiler#set_execute_file('c',    'vim')
call vimfiler#set_execute_file('h',    'vim')
call vimfiler#set_execute_file('md',   'vim')
call vimfiler#set_execute_file('pm',   'vim')
call vimfiler#set_execute_file('t',    'vim')
call vimfiler#set_execute_file('css',  'vim')
call vimfiler#set_execute_file('js',   'vim')
call vimfiler#set_execute_file('vim',  'vim')
call vimfiler#set_execute_file('yaml', 'vim')
call vimfiler#set_execute_file('yml',  'vim')

""""""""""""""""""""
" zencoding
""""""""""""""""""""
" let g:user_zen_settings = {
"     \'indentation' : '    ',
"     \}

""""""""""""""""""""
" powerline
""""""""""""""""""""
let g:Powerline_symbols = 'fancy'

set guifont=Ricty_for_Powerline:h10
set guifontwide=Ricty:h10

" let g:Powerline_mode_i = '挿入'
" let g:Powerline_mode_R = '置換'
" let g:Powerline_mode_n = '通常'
" let g:Powerline_mode_v = 'ビジュアル'
" let g:Powerline_mode_V = '行ビジュアル'
" let g:Powerline_mode_cv = '矩形ビジュアル'
" let g:Powerline_mode_s = '選択'
" let g:Powerline_mode_S = '行選択'
" let g:Powerline_mode_cs = '矩形選択'

""""""""""""""""""""
" syntastic
""""""""""""""""""""

" jslint is needed!!
" npm install jslint -g

let g:syntastic_mode_map = { 'mode': 'active', 'active_filetypes': ['php','css','coffee','html','javascript','json','less','xhtml','ruby','python','yaml'], 'passive_filetypes': ['perl'] }
let g:syntastic_enable_signs  = 1
let g:syntastic_auto_loc_list = 2

""""""""""""""""""""
" vim-indent-guides
""""""""""""""""""""

let g:indent_guides_enable_on_vim_startup  =  1 "vim立ち上げ時に自動的にvim-indent-guidesをオンにする
let g:indent_guides_auto_colors            =  0 "autoにするとよく見えなかったので自動的に色付けするのはストップ
let g:indent_guides_color_change_percent   = 10 "色の変化の幅（？）。パーセンテージらしい
let g:indent_guides_guide_size             =  1 "インデントの色付け幅

autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=darkgray guibg=black    "インデントの色
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=grey     guibg=darkgrey "二段階目のインデントの色

""""""""""""""""""""
" tweetvim
""""""""""""""""""""

let g:tweetvim_tweet_per_page = 60
nnoremap <silent><Leader>ts :<C-u>TweetVimSay<CR>
nnoremap <silent><Leader>tw :<C-u>split <Bar> TweetVimHomeTimeline<CR>
nnoremap <silent><Leader>tm :<C-u>split <Bar> TweetVimMentions<CR>

""""""""""""""""""""
" gundo
""""""""""""""""""""
nnoremap U :GundoToggle<CR>
