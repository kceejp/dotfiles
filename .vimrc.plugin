""""""""""""""""""""
" vundle.vim
""""""""""""""""""""
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

Bundle 'Shougo/neocomplcache'
Bundle 'Shougo/neocomplcache-snippets-complete'
Bundle 'Shougo/unite.vim'
Bundle 'Shougo/vimshell'
Bundle 'Shougo/vimproc'
Bundle 'Shougo/vimfiler'
Bundle 'ujihisa/unite-colorscheme'
Bundle 'ujihisa/tabpagecolorscheme'

" Bundle 'vcscommand.vim'
Bundle 'vim-scripts/svn-diff.vim'
"shows diff when commiting changes
Bundle 'laurentb/vim-svndiff'
" Bundle 'svndiff'
" Bundle 'svndiff.vim'
" Bundle 'svn-diff.vim'

Bundle 'yanktmp.vim'
Bundle 'YankRing.vim'

" template
Bundle 'qtmplsel.vim'

Bundle 'Smooth-Scroll'
" Bundle 'simplefold'
" Bundle 'smartchr'
Bundle 'surround.vim'
" Bundle 'mattn/zencoding-vim.git'
Bundle 'vim-scripts/AutoClose--Alves'

" improved perl syntax highlighting
Bundle 'perl-mauke.vim'

" Bundle 'yoppi/perl5lib'
Bundle 'errormarker.vim'
" Bundle 'ywatase/flymake-perl.vim'
" Bundle 'kana/vim-flymake'

Bundle 'desert256.vim'
Bundle 'ciaranm/inkpot'
Bundle 'newspaper.vim'
Bundle 'therubymug/vim-pyte'

Bundle 'msanders/cocoa.vim'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'vim-scripts/matchit.zip'
Bundle 'vim-scripts/ShowMarks'
Bundle 'vim-scripts/SearchComplete'

filetype plugin indent on

""""""""""""""""""""
" errormarker.vim
" http://subtech.g.hatena.ne.jp/secondlife/200807
""""""""""""""""""""
" set makeprg=$HOME/.vim/bin/vimparse.pl\ -c\ %\ $*
" set errorformat=%f:%l:%m
" set shellpipe=2>&1\ >
" 
" if !exists("g:perl_flyquickfixmake")
"   let g:perl_flyquickfixmake = 1
"   autocmd BufWritePost *.pm,*.pl,*.t silent make %
" endif

""""""""""""""""""""
" neocomplcache
""""""""""""""""""""
let g:neocomplcache_enable_at_startup = 1 " 起動時に有効化
" 1番目の候補を自動選択
let g:neocomplcache_enable_auto_select = 0
let g:neocomplcache_temporary_dir = $HOME . '/.vim/tmp/.neocon'
let g:neocomplcache_snippets_dir  = '~/.vim/snippets'
" imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"

""""""""""""""""""""
" vcscommand.vim
""""""""""""""""""""
map <leader>di :VCSDiff<CR>

""""""""""""""""""""
" svndiff.vim
""""""""""""""""""""
noremap <F3> :call Svndiff("next")<CR>

""""""""""""""""""""
" yanktmp.vim : enables vim to yank and paste through the multi processes
" http://www.vim.org/scripts/script.php?script_id=1598
""""""""""""""""""""
map <silent> sy :call YanktmpYank()<CR>
map <silent> sp :call YanktmpPaste_p()<CR>
map <silent> sP :call YanktmpPaste_P()<CR>

""""""""""""""""""""
" unite.vim
" http://github.com/Shougo/unite.vim/blob/master/doc/unite.jax
""""""""""""""""""""
let g:unite_data_directory              = $HOME . '/.vim/tmp/.unite' " absolute path!
let g:unite_source_file_rec_ignore_pattern = '(.git|.svn)'
let g:unite_source_file_mru_time_format    = ''
let g:unite_source_file_mru_limit          = 1000

" The prefix key.
nnoremap [unite] <Nop>
nmap f [unite]

" nnoremap [unite]u :<C-u>Unite<Space>
" nnoremap <silent> [unite]f :<C-u>UniteWithCurrentDir -buffer-name=files buffer file_mru bookmark file<CR>

" ffでカレントディレクトリ以下の一覧を出す
nnoremap <silent> [unite]f :<C-u>Unite file_rec/async<CR>
" nnoremap <silent> [unite]f :<C-u>Unite -buffer-name=files -prompt=:tabnew\  file file_rec<CR>
" nnoremap <silent> [unite]b :<C-u>Unite bookmark<CR>
nnoremap <silent> [unite]r :<C-u>Unite tab bookmark file_mru<CR>
nnoremap <silent> [unite]c :<C-u>Unite colorscheme -auto-preview<CR>

autocmd FileType unite call s:unite_my_settings()

function! s:unite_my_settings()"{{{
  " Overwrite settings.

  call unite#custom_default_action('file', 'tabopen')

  nmap <buffer> a          <Plug>(unite_append_end)
  imap <buffer> jj         <Plug>(unite_insert_leave)

  imap <buffer> <Tab>      <Plug>(unite_do_default_action)
  imap <buffer> <S-Tab>    <Plug>(unite_insert_leave)<Plug>(unite_loop_cursor_up)

  nmap <buffer> <Tab>      <Plug>(unite_loop_cursor_down)
  nmap <buffer> <S-Tab>    <Plug>(unite_loop_cursor_up)

  nmap <buffer> <C-w>      <Plug>(unite_delete_backward_path)

  imap <buffer> <C-c>      <Plug>(unite_exit)
  nmap <buffer> <C-c>      <Plug>(unite_exit)
  imap <buffer> <C-c><C-c> <Plug>(unite_exit)
  nmap <buffer> <C-c><C-c> <Plug>(unite_exit)

  imap <buffer> <C-w>      <Plug>(unite_delete_backward_path)

  " Start insert.
  let g:unite_enable_start_insert             = 1
  let g:unite_update_time                     = 100
  let g:unite_source_file_rec_max_depth       = 5
  let g:unite_source_file_mru_filename_format = ''
  let g:unite_enable_smart_case               = 1
  let g:unite_enable_split_vertically         = 0

endfunction"}}}

""""""""""""""""""""
" qtmplsel.vim
""""""""""""""""""""
let g:qts_templatedir = "~/.vim/template"

""""""""""""""""""""
" yankring.vim
""""""""""""""""""""
let g:yankring_history_file = ".vim/tmp/yankring_history" " do not specify $HOME since it'll cause error

""""""""""""""""""""
" vimfiler
""""""""""""""""""""

map <leader>vf :VimFilerTab<CR>

let g:vimfiler_as_default_explorer = 1
let g:vimfiler_edit_action         = 'tabopen'

call vimfiler#set_execute_file('pl', 'vim')
call vimfiler#set_execute_file('pm', 'vim')
call vimfiler#set_execute_file('t', 'vim')
call vimfiler#set_execute_file('css', 'vim')
call vimfiler#set_execute_file('js', 'vim')
call vimfiler#set_execute_file('vim', 'vim')
call vimfiler#set_execute_file('yaml', 'vim')
call vimfiler#set_execute_file('yml', 'vim')

""""""""""""""""""""
" zencoding
""""""""""""""""""""
" let g:user_zen_settings = {
"     \'indentation' : '    ',
"     \}
