# screenのステータスに実行中のプログラム表示
# case "${TERM}" in screen)
# preexec() {
#     echo -ne "\ek#${1%% *}\e\\"
# }
# precmd() {
#     echo -ne "\ek$(basename $(pwd))\e\\"
# }
# esac

# http://d.hatena.ne.jp/yanma_4/20080404/1207316545
preexec () {
    if [ $TERM = "xterm-256color" ]; then
        1="$1 " # deprecated.
    lang=`echo $LANG | sed "s/.\+\.\(.\).\+/\1/"`
        echo -ne "\ek${${(s: :)1}[0]}($lang)\e\\"
    fi
}

# screenを自動でリタッチ
if [ $SHLVL = 1 ];then
    if [ -x `which screen` ]; then
        screen -d -R
    fi
fi

# http://d.hatena.ne.jp/naoya/20051223/1135351050
function ssh_screen(){
 eval server=?${$#}
 screen -t $server ssh "$@"
}
if [ $TERM = "xterm-256color" ]; then
  alias ssh=ssh_screen
fi

# http://nijino.homelinux.net/diary/200206.shtml#200206140
# if [ "$TERM" = "screen" ]; then
#     chpwd () { echo -n "^[_`dirs`^[\\" }
#     preexec() {
#         # see [zsh-workers:13180]
#         # http://www.zsh.org/mla/workers/2000/msg03993.html
#         emulate -L zsh
#         local -a cmd; cmd=(${(z)2})
#         case $cmd[1] in
#             fg)
#                 if (( $#cmd == 1 )); then
#                     cmd=(builtin jobs -l %+)
#                 else
#                     cmd=(builtin jobs -l $cmd[2])
#                 fi
#                 ;;
#             %*)
#                 cmd=(builtin jobs -l $cmd[1])
#                 ;;
#             cd)
#                 if (( $#cmd == 2)); then
#                     cmd[1]=$cmd[2]
#                 fi
#                 ;&
#             *)
#                 echo -n "^[k$cmd[1]:t^[\\"
#                 return
#                 ;;
#         esac
#
#         local -A jt; jt=(${(kv)jobtexts})
#
#         $cmd >>(read num rest
#             cmd=(${(z)${(e):-\$jt$num}})
#             echo -n "^[k$cmd[1]:t^[\\") 2>/dev/null
#     }
#     chpwd
# fi
